diff -urN origsrc/boost_1_55_0/boost/gil/gil_config.hpp src/boost_1_55_0/boost/gil/gil_config.hpp
--- origsrc/boost_1_55_0/boost/gil/gil_config.hpp	2009-05-16 23:11:54.000000000 +0900
+++ src/boost_1_55_0/boost/gil/gil_config.hpp	2014-04-14 00:12:28.837884200 +0900
@@ -32,7 +32,7 @@
 #if   defined(_MSC_VER)
 #    define GIL_FORCEINLINE __forceinline
 #elif defined(__GNUC__) && __GNUC__ > 3
-#    define GIL_FORCEINLINE inline __attribute__ ((always_inline))
+#    define GIL_FORCEINLINE inline __attribute__ ((__always_inline__))
 #else
 #    define GIL_FORCEINLINE inline
 #endif
diff -urN origsrc/boost_1_55_0/boost/optional/optional.hpp src/boost_1_55_0/boost/optional/optional.hpp
--- origsrc/boost_1_55_0/boost/optional/optional.hpp	2012-10-21 21:01:37.000000000 +0900
+++ src/boost_1_55_0/boost/optional/optional.hpp	2014-04-14 00:12:28.840884500 +0900
@@ -127,7 +127,7 @@
     union
     // This works around GCC warnings about breaking strict aliasing rules when casting storage address to T*
 #if defined(BOOST_OPTIONAL_DETAIL_USE_ATTRIBUTE_MAY_ALIAS)
-    __attribute__((may_alias))
+    __attribute__((__may_alias__))
 #endif
     dummy_u
     {
diff -urN origsrc/boost_1_55_0/boost/random/detail/integer_log2.hpp src/boost_1_55_0/boost/random/detail/integer_log2.hpp
--- origsrc/boost_1_55_0/boost/random/detail/integer_log2.hpp	2013-09-22 05:17:00.000000000 +0900
+++ src/boost_1_55_0/boost/random/detail/integer_log2.hpp	2014-04-14 00:12:28.842884700 +0900
@@ -27,7 +27,7 @@
 #elif defined(BOOST_MSVC)
 #define BOOST_RANDOM_DETAIL_CONSTEXPR __forceinline
 #elif defined(__GNUC__) && __GNUC__ >= 4
-#define BOOST_RANDOM_DETAIL_CONSTEXPR inline __attribute__((const)) __attribute__((always_inline))
+#define BOOST_RANDOM_DETAIL_CONSTEXPR inline __attribute__((__const__)) __attribute__((__always_inline__))
 #else
 #define BOOST_RANDOM_DETAIL_CONSTEXPR inline
 #endif
